name: CI

on: [push, pull_request]

jobs:
    lint:
        name: Lint files and dependencies
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x]
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get Yarn cache path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache Yarn cache
              id: cache-yarn-cache
              uses: actions/cache@v1
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-yarn-

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Install dependencies
              run: yarn install --frozen-lockfile
              if: |
                steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: lint:dependency
              run: yarn lint:dependency

            - name: lint:hbs
              run: yarn lint:hbs

            - name: lint:js
              run: yarn lint:js


    test-partition-1:
        name: Run tests - Partition 1
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x]
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get Yarn cache path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache Yarn cache
              id: cache-yarn-cache
              uses: actions/cache@v1
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-yarn-

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Install dependencies
              run: yarn install --frozen-lockfile
              if: |
                steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: Test Ember app
              run: yarn test --partition=1


    test-partition-2:
        name: Run tests - Partition 2
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x]
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get Yarn cache path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache Yarn cache
              id: cache-yarn-cache
              uses: actions/cache@v1
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-yarn-

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Install dependencies
              run: yarn install --frozen-lockfile
              if: |
                steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: Test Ember app
              run: yarn test --partition=2


    test-partition-3:
        name: Run tests - Partition 3
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x]
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get Yarn cache path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache Yarn cache
              id: cache-yarn-cache
              uses: actions/cache@v1
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-yarn-

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Install dependencies
              run: yarn install --frozen-lockfile
              if: |
                steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: Test Ember app
              run: yarn test --partition=3


    test-partition-4:
        name: Run tests - Partition 4
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x]
        steps:
            - name: Check out a copy of the repo
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node-version }}

            - name: Get Yarn cache path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache Yarn cache
              id: cache-yarn-cache
              uses: actions/cache@v1
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-yarn-

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Install dependencies
              run: yarn install --frozen-lockfile
              if: |
                steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: Test Ember app
              run: yarn test --partition=4